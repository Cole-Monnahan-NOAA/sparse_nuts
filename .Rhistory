## devtools::load_all('C:/Users/cole.monnahan/adnuts/')
## devtools::install('C:/Users/cole.monnahan/adnuts/')
library(adnuts)
## devtools::load_all('C:/Users/cole.monnahan/adnuts/')
## devtools::install('C:/Users/cole.monnahan/adnuts/')
devtools::install_github('Cole-Monnahan-NOAA/adnuts/sparse_M')
## devtools::load_all('C:/Users/cole.monnahan/adnuts/')
## devtools::install('C:/Users/cole.monnahan/adnuts/')
devtools::install_github('Cole-Monnahan-NOAA/adnuts', ref='sparse_M')
install.packages('tidyverse')
install.packages('Matrix')
install.packages('TMB')
## devtools::load_all('C:/Users/cole.monnahan/adnuts/')
## devtools::install('C:/Users/cole.monnahan/adnuts/')
devtools::install_github('Cole-Monnahan-NOAA/adnuts', ref='sparse_M')
install.packages('devtools')
## devtools::load_all('C:/Users/cole.monnahan/adnuts/')
## devtools::install('C:/Users/cole.monnahan/adnuts/')
devtools::install_github('Cole-Monnahan-NOAA/adnuts', ref='sparse_M')
Sys.setenv(DOWNLOAD_STATIC_LIBV8 = 1) # only necessary for Linux without the nodejs library / headers
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
# we recommend running this is a fresh R session or restarting your current session
install.packages('StanEstimators', repos = c('https://andrjohns.r-universe.dev', 'https://cloud.r-project.org'))
## devtools::load_all('C:/Users/cole.monnahan/adnuts/')
## devtools::install('C:/Users/cole.monnahan/adnuts/')
devtools::install_github('Cole-Monnahan-NOAA/adnuts', ref='sparse_M')
## devtools::load_all('C:/Users/cole.monnahan/adnuts/')
## devtools::install('C:/Users/cole.monnahan/adnuts/')
## devtools::install_github('Cole-Monnahan-NOAA/adnuts', ref='sparse_M')
library(adnuts)
source("code/startup.R")
TMB::runExample('simple')
## Demo with simple
## TMB::runExample('ar1xar1')
fit.demo <- sample_sparse_tmb(obj, iter=500, warmup=100, init='random',
chains=2, cores=1, metric='sparse', seed=124)
install.packages('microbenchmark')
launch_shinyadmb(fit.demo)
## Efficiency across a bivariate normal with varying marginal SDs and correlations
cpus <- 1
reps <- 6
source("code/run_timings.R")
install.packages('RTMB')
## Efficiency across a bivariate normal with varying marginal SDs and correlations
cpus <- 1
reps <- 6
## Efficiency across a bivariate normal with varying marginal SDs and correlations
cpus <- 3
reps <- 6
source("code/run_timings.R")
install.packages(c('future', 'callr'))
library(future)
## increasing dimensionality of a SPDE object
cpus <- 1
reps <- 1
source('code/run_spde.R')
## Efficiency across a bivariate normal with varying marginal SDs and correlations
cpus <- 3
reps <- 6
source("code/run_timings.R")
fits <- fit_models(obj, iter=2000, warmup=1000, cores=4,
chains=4, Q=Q,Qinv=M, cpus=cpus,
metric=c('unit', 'diag', 'dense'),
model='ratios',
globals=list(data=data), replicates=reps,
control=list(max_treedepth=1))
## Efficiency across a bivariate normal with varying marginal SDs and correlations
cpus <- 3
reps <- 6
source("code/run_timings.R")
## devtools::load_all('C:/Users/cole.monnahan/adnuts/')
## devtools::install('C:/Users/cole.monnahan/adnuts/')
## devtools::install_github('Cole-Monnahan-NOAA/adnuts', ref='sparse_M')
library(adnuts)
source("code/startup.R")
stats <- readRDS('results/spde_stats.RDS')
g <- ggplot(stats, aes(nrepars, eff, color=metric, group=interaction(metric,replicate))) +
geom_line() + scale_y_log10() + scale_x_log10()
g
stats <- readRDS('results/spde_stats.RDS') %>% group_by(metric, nrepars) %>%
mutate(mean_eff=mean(eff))
g <- ggplot(stats, aes(nrepars, mean_eff, color=metric, group=interaction(metric,replicate))) +
geom_line() + scale_y_log10() + scale_x_log10()
g
g + geom_point(mapping=aes(y=eff))
stats <- readRDS('results/spde_stats.RDS') %>% group_by(metric, nrepars) %>%
mutate(mean_eff=mean(eff))
g <- ggplot(stats, aes(nrepars, mean_eff, color=metric, group=interaction(metric,replicate))) +
geom_line() + scale_y_log10() + scale_x_log10()
g <- g + geom_point(mapping=aes(y=eff))
ggsave('plots/spde_efficiency.png', g, width=7, height=5, units='in')
stats <- readRDS('results/spde_stats.RDS') %>% group_by(metric, nrepars) %>%
mutate(mean_eff=mean(eff))
g <- ggplot(stats, aes(nrepars, mean_eff, color=metric, group=interaction(metric,replicate))) +
geom_line() + scale_y_log10() + scale_x_log10()
g <- g + geom_jitter(mapping=aes(y=eff), width=5)
ggsave('plots/spde_efficiency.png', g, width=7, height=5, units='in')
stats <- readRDS('results/spde_stats.RDS') %>% group_by(metric, nrepars) %>%
mutate(mean_eff=mean(eff))
g <- ggplot(stats, aes(nrepars, mean_eff, color=metric, group=interaction(metric,replicate))) +
geom_line() + scale_y_log10() + scale_x_log10()
g <- g + geom_jitter(mapping=aes(y=eff), width=.5)
ggsave('plots/spde_efficiency.png', g, width=7, height=5, units='in')
stats <- readRDS('results/spde_stats.RDS') %>% group_by(metric, nrepars) %>%
mutate(mean_eff=mean(eff))
g <- ggplot(stats, aes(nrepars, mean_eff, color=metric, group=interaction(metric,replicate))) +
geom_line() + scale_y_log10() + scale_x_log10()
g <- g + geom_jitter(mapping=aes(y=eff), width=.05)
ggsave('plots/spde_efficiency.png', g, width=7, height=5, units='in')
stats <- readRDS('results/spde_stats.RDS') %>% group_by(metric, nrepars) %>%
mutate(mean_eff=mean(eff))
g <- ggplot(stats, aes(nrepars, mean_eff, color=metric, group=interaction(metric,replicate))) +
geom_line() + scale_y_log10() + scale_x_log10()
g <- g + geom_jitter(mapping=aes(y=eff), width=.001)
ggsave('plots/spde_efficiency.png', g, width=7, height=5, units='in')
stats <- readRDS('results/spde_stats.RDS') %>% group_by(metric, nrepars) %>%
mutate(mean_eff=mean(eff))
g <- ggplot(stats, aes(nrepars, mean_eff, color=metric, group=interaction(metric,replicate))) +
geom_line() + scale_y_log10() + scale_x_log10()
g <- g + geom_jitter(mapping=aes(y=eff), width=.005)
ggsave('plots/spde_efficiency.png', g, width=7, height=5, units='in')
install.packages(c("abind", "askpass", "bit", "bit64", "broom", "bslib", "checkmate", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "digest", "distributional", "dsem", "e1071", "evaluate", "fmesher", "fs", "future", "gert", "glue", "gtable", "httr2", "igraph", "jsonlite", "knitr", "Matrix", "matrixStats", "microbenchmark", "minqa", "mvtnorm", "openssl", "parallelly", "pkgbuild", "pkgdown", "profvis", "ps", "QuickJSR", "ragg", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "rmarkdown", "rstudioapi", "RTMB", "s2", "sem", "shiny", "sys", "tinytex", "TMB", "usethis", "uuid", "V8", "waldo", "withr", "wk", "xfun", "xts", "yaml"))
install.packages(c("boot", "foreign", "MASS", "Matrix", "nlme", "survival"), lib="C:/Users/cole.monnahan/AppData/Local/Programs/R/R-4.4.1/library")
# Install package
install_github("james-thorson/VAST@main", INSTALL_opts="--no-staged-install")
library(devtools)
# Install package
install_github("james-thorson/VAST@main", INSTALL_opts="--no-staged-install")
# Load package
library(VAST)
